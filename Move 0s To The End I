/*
 * Move 0s To The End I
 * 
 * Given an array of integers, move all the 0s to the right end of the array.
 *
 * The relative order of the elements in the original array does not need to be 
 * maintained.
 
 * Examples
 * {1} --> {1}
 * {1, 0, 3, 0, 1} --> {1, 3, 1, 0, 0} or {1, 1, 3, 0, 0} or {3, 1, 1, 0, 0}
 * 
 * Assumptions
 * The given array is not null.
 *
 */
 

/*  11300
 *     i   
 *    j
 *  
 *  1
 *  i
 *  j
 *  
 *  定義區間:
 *  [first,i): 已探索，放非0的數
 *  [i,j]: 未探索區域
 *  (j,last]: 放0 (右指針的右邊，不包含j)
 *  
 *  while(i <= j)
 *  case1: if(arr[i] != 0) --> i++
 *  case2: if(arr[i] == 0) --> swap(arr[i], arr[j]), j-- (i不動)
 *  終止條件: 當i > j時(當i的位置來到j的下一個時) 不再進入while迴圈
 *
 */



public class Solution {
	public int[] moveZero(int[] array) {
		int i = 0;
		int j = array.length - 1;
		while (i <= j) {
			if (array[i] == 0) {
				swap(array, i, j);
				j--;
			} else {
				i++;
			}
		}
		return array;
	}
	
	private void swap(int[] array, int i, int j) {
		int temp = array[i];
		array[i] = array[j];
		array[j] = temp;
	}
}











